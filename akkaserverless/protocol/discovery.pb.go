// Copyright 2021 Lightbend Inc.

// gRPC interface for the discovery service provided by user functions

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: akkaserverless/protocol/discovery.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Write consistency setting for a replicated entity.
type ReplicatedWriteConsistency int32

const (
	ReplicatedWriteConsistency_REPLICATED_WRITE_CONSISTENCY_LOCAL_UNSPECIFIED ReplicatedWriteConsistency = 0
	ReplicatedWriteConsistency_REPLICATED_WRITE_CONSISTENCY_MAJORITY          ReplicatedWriteConsistency = 1
	ReplicatedWriteConsistency_REPLICATED_WRITE_CONSISTENCY_ALL               ReplicatedWriteConsistency = 2
)

// Enum value maps for ReplicatedWriteConsistency.
var (
	ReplicatedWriteConsistency_name = map[int32]string{
		0: "REPLICATED_WRITE_CONSISTENCY_LOCAL_UNSPECIFIED",
		1: "REPLICATED_WRITE_CONSISTENCY_MAJORITY",
		2: "REPLICATED_WRITE_CONSISTENCY_ALL",
	}
	ReplicatedWriteConsistency_value = map[string]int32{
		"REPLICATED_WRITE_CONSISTENCY_LOCAL_UNSPECIFIED": 0,
		"REPLICATED_WRITE_CONSISTENCY_MAJORITY":          1,
		"REPLICATED_WRITE_CONSISTENCY_ALL":               2,
	}
)

func (x ReplicatedWriteConsistency) Enum() *ReplicatedWriteConsistency {
	p := new(ReplicatedWriteConsistency)
	*p = x
	return p
}

func (x ReplicatedWriteConsistency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplicatedWriteConsistency) Descriptor() protoreflect.EnumDescriptor {
	return file_akkaserverless_protocol_discovery_proto_enumTypes[0].Descriptor()
}

func (ReplicatedWriteConsistency) Type() protoreflect.EnumType {
	return &file_akkaserverless_protocol_discovery_proto_enumTypes[0]
}

func (x ReplicatedWriteConsistency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplicatedWriteConsistency.Descriptor instead.
func (ReplicatedWriteConsistency) EnumDescriptor() ([]byte, []int) {
	return file_akkaserverless_protocol_discovery_proto_rawDescGZIP(), []int{0}
}

type Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This should be the Descriptors.FileDescriptorSet in proto serialized from
	// as generated by:
	// ```
	// protoc --include_imports \
	// --proto_path=<proto file directory> \
	// --descriptor_set_out=user-function.desc \
	// <path to .proto files>
	// ```
	Proto []byte `protobuf:"bytes,1,opt,name=proto,proto3" json:"proto,omitempty"`
	// The components being served.
	Components []*Component `protobuf:"bytes,2,rep,name=components,proto3" json:"components,omitempty"`
	// Optional information about the service.
	ServiceInfo *ServiceInfo `protobuf:"bytes,3,opt,name=service_info,json=serviceInfo,proto3" json:"service_info,omitempty"`
}

func (x *Spec) Reset() {
	*x = Spec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spec) ProtoMessage() {}

func (x *Spec) ProtoReflect() protoreflect.Message {
	mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spec.ProtoReflect.Descriptor instead.
func (*Spec) Descriptor() ([]byte, []int) {
	return file_akkaserverless_protocol_discovery_proto_rawDescGZIP(), []int{0}
}

func (x *Spec) GetProto() []byte {
	if x != nil {
		return x.Proto
	}
	return nil
}

func (x *Spec) GetComponents() []*Component {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *Spec) GetServiceInfo() *ServiceInfo {
	if x != nil {
		return x.ServiceInfo
	}
	return nil
}

// Information about the service that the proxy is proxying to. All of the
// information in here is optional. It may be useful for debug purposes.
type ServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the service, eg, "shopping-cart".
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// The version of the service.
	ServiceVersion string `protobuf:"bytes,2,opt,name=service_version,json=serviceVersion,proto3" json:"service_version,omitempty"`
	// A description of the runtime for the service. Can be anything, but examples
	// might be:
	// - node v10.15.2
	// - OpenJDK Runtime Environment 1.8.0_192-b12
	ServiceRuntime string `protobuf:"bytes,3,opt,name=service_runtime,json=serviceRuntime,proto3" json:"service_runtime,omitempty"`
	// If using a support library, the name of that library, eg "akkaserverless"
	SupportLibraryName string `protobuf:"bytes,4,opt,name=support_library_name,json=supportLibraryName,proto3" json:"support_library_name,omitempty"`
	// The version of the support library being used.
	SupportLibraryVersion string `protobuf:"bytes,5,opt,name=support_library_version,json=supportLibraryVersion,proto3" json:"support_library_version,omitempty"`
	// Akka Serverless protocol major version accepted by the support library.
	ProtocolMajorVersion int32 `protobuf:"varint,6,opt,name=protocol_major_version,json=protocolMajorVersion,proto3" json:"protocol_major_version,omitempty"`
	// Akka Serverless protocol minor version accepted by the support library.
	ProtocolMinorVersion int32 `protobuf:"varint,7,opt,name=protocol_minor_version,json=protocolMinorVersion,proto3" json:"protocol_minor_version,omitempty"`
}

func (x *ServiceInfo) Reset() {
	*x = ServiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfo) ProtoMessage() {}

func (x *ServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfo.ProtoReflect.Descriptor instead.
func (*ServiceInfo) Descriptor() ([]byte, []int) {
	return file_akkaserverless_protocol_discovery_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceInfo) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceInfo) GetServiceVersion() string {
	if x != nil {
		return x.ServiceVersion
	}
	return ""
}

func (x *ServiceInfo) GetServiceRuntime() string {
	if x != nil {
		return x.ServiceRuntime
	}
	return ""
}

func (x *ServiceInfo) GetSupportLibraryName() string {
	if x != nil {
		return x.SupportLibraryName
	}
	return ""
}

func (x *ServiceInfo) GetSupportLibraryVersion() string {
	if x != nil {
		return x.SupportLibraryVersion
	}
	return ""
}

func (x *ServiceInfo) GetProtocolMajorVersion() int32 {
	if x != nil {
		return x.ProtocolMajorVersion
	}
	return 0
}

func (x *ServiceInfo) GetProtocolMinorVersion() int32 {
	if x != nil {
		return x.ProtocolMinorVersion
	}
	return 0
}

type Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of component (action, event sourced entity, view, etc). By
	// convention, this should be a fully qualified service name of the service
	// which is used to call the component from the proxy on the user function,
	// for example:
	// akkaserverless.component.eventsourcedentity.EventSourcedEntities
	ComponentType string `protobuf:"bytes,1,opt,name=component_type,json=componentType,proto3" json:"component_type,omitempty"`
	// The name of the service to load from the protobuf file.
	ServiceName string `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Types that are assignable to ComponentSettings:
	//	*Component_Entity
	//	*Component_Component
	ComponentSettings isComponent_ComponentSettings `protobuf_oneof:"component_settings"`
}

func (x *Component) Reset() {
	*x = Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_akkaserverless_protocol_discovery_proto_rawDescGZIP(), []int{2}
}

func (x *Component) GetComponentType() string {
	if x != nil {
		return x.ComponentType
	}
	return ""
}

func (x *Component) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (m *Component) GetComponentSettings() isComponent_ComponentSettings {
	if m != nil {
		return m.ComponentSettings
	}
	return nil
}

func (x *Component) GetEntity() *EntitySettings {
	if x, ok := x.GetComponentSettings().(*Component_Entity); ok {
		return x.Entity
	}
	return nil
}

func (x *Component) GetComponent() *GenericComponentSettings {
	if x, ok := x.GetComponentSettings().(*Component_Component); ok {
		return x.Component
	}
	return nil
}

type isComponent_ComponentSettings interface {
	isComponent_ComponentSettings()
}

type Component_Entity struct {
	Entity *EntitySettings `protobuf:"bytes,3,opt,name=entity,proto3,oneof"`
}

type Component_Component struct {
	Component *GenericComponentSettings `protobuf:"bytes,4,opt,name=component,proto3,oneof"`
}

func (*Component_Entity) isComponent_ComponentSettings() {}

func (*Component_Component) isComponent_ComponentSettings() {}

// shared settings for the components that does not have a specific settings type
type GenericComponentSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// header names to ask the proxy to forward from the request as metadata to the component calls,
	// note that the proxy may filter out Akka Serverless internal headers from this list to not leak implementation details
	ForwardHeaders []string `protobuf:"bytes,1,rep,name=forward_headers,json=forwardHeaders,proto3" json:"forward_headers,omitempty"`
}

func (x *GenericComponentSettings) Reset() {
	*x = GenericComponentSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericComponentSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericComponentSettings) ProtoMessage() {}

func (x *GenericComponentSettings) ProtoReflect() protoreflect.Message {
	mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericComponentSettings.ProtoReflect.Descriptor instead.
func (*GenericComponentSettings) Descriptor() ([]byte, []int) {
	return file_akkaserverless_protocol_discovery_proto_rawDescGZIP(), []int{3}
}

func (x *GenericComponentSettings) GetForwardHeaders() []string {
	if x != nil {
		return x.ForwardHeaders
	}
	return nil
}

// shared settings for entities (event sourced/value/replicated entity)
type EntitySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// namespace for persisted or replicated state
	EntityType          string               `protobuf:"bytes,3,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	PassivationStrategy *PassivationStrategy `protobuf:"bytes,4,opt,name=passivation_strategy,json=passivationStrategy,proto3" json:"passivation_strategy,omitempty"`
	// header names to ask the proxy to forward from the request as metadata to the component calls
	// note that the proxy may filter out Akka Serverless internal headers from this list to not leak implementation details
	ForwardHeaders []string `protobuf:"bytes,5,rep,name=forward_headers,json=forwardHeaders,proto3" json:"forward_headers,omitempty"`
	// specific settings for entities (oneof to be extensible later)
	//
	// Types that are assignable to SpecificSettings:
	//	*EntitySettings_ReplicatedEntity
	SpecificSettings isEntitySettings_SpecificSettings `protobuf_oneof:"specific_settings"`
}

func (x *EntitySettings) Reset() {
	*x = EntitySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitySettings) ProtoMessage() {}

func (x *EntitySettings) ProtoReflect() protoreflect.Message {
	mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitySettings.ProtoReflect.Descriptor instead.
func (*EntitySettings) Descriptor() ([]byte, []int) {
	return file_akkaserverless_protocol_discovery_proto_rawDescGZIP(), []int{4}
}

func (x *EntitySettings) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *EntitySettings) GetPassivationStrategy() *PassivationStrategy {
	if x != nil {
		return x.PassivationStrategy
	}
	return nil
}

func (x *EntitySettings) GetForwardHeaders() []string {
	if x != nil {
		return x.ForwardHeaders
	}
	return nil
}

func (m *EntitySettings) GetSpecificSettings() isEntitySettings_SpecificSettings {
	if m != nil {
		return m.SpecificSettings
	}
	return nil
}

func (x *EntitySettings) GetReplicatedEntity() *ReplicatedEntitySettings {
	if x, ok := x.GetSpecificSettings().(*EntitySettings_ReplicatedEntity); ok {
		return x.ReplicatedEntity
	}
	return nil
}

type isEntitySettings_SpecificSettings interface {
	isEntitySettings_SpecificSettings()
}

type EntitySettings_ReplicatedEntity struct {
	ReplicatedEntity *ReplicatedEntitySettings `protobuf:"bytes,6,opt,name=replicated_entity,json=replicatedEntity,proto3,oneof"`
}

func (*EntitySettings_ReplicatedEntity) isEntitySettings_SpecificSettings() {}

// The passivation strategy for the entity user function.
//
// The semantics is to provide a flexible way for entity user functions to
// configure the passivation strategy. This strategy is sent to the proxy at
// discovery time allowing the proxy to configure the corresponding entities.
// The only passivation strategy supported is the timeout strategy and
// configuring this is optional for the entity. If an entity user function does
// not configure the passivation strategy the proxy uses its fallback default
// value.
type PassivationStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Strategy:
	//	*PassivationStrategy_Timeout
	Strategy isPassivationStrategy_Strategy `protobuf_oneof:"strategy"`
}

func (x *PassivationStrategy) Reset() {
	*x = PassivationStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassivationStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassivationStrategy) ProtoMessage() {}

func (x *PassivationStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassivationStrategy.ProtoReflect.Descriptor instead.
func (*PassivationStrategy) Descriptor() ([]byte, []int) {
	return file_akkaserverless_protocol_discovery_proto_rawDescGZIP(), []int{5}
}

func (m *PassivationStrategy) GetStrategy() isPassivationStrategy_Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

func (x *PassivationStrategy) GetTimeout() *TimeoutPassivationStrategy {
	if x, ok := x.GetStrategy().(*PassivationStrategy_Timeout); ok {
		return x.Timeout
	}
	return nil
}

type isPassivationStrategy_Strategy interface {
	isPassivationStrategy_Strategy()
}

type PassivationStrategy_Timeout struct {
	// the timeout passivation strategy.
	Timeout *TimeoutPassivationStrategy `protobuf:"bytes,1,opt,name=timeout,proto3,oneof"`
}

func (*PassivationStrategy_Timeout) isPassivationStrategy_Strategy() {}

// A passivation strategy based on a timeout. The idle timeout after which a
// user function's entity is passivated.
type TimeoutPassivationStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The timeout in millis
	Timeout int64 `protobuf:"varint,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *TimeoutPassivationStrategy) Reset() {
	*x = TimeoutPassivationStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeoutPassivationStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeoutPassivationStrategy) ProtoMessage() {}

func (x *TimeoutPassivationStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeoutPassivationStrategy.ProtoReflect.Descriptor instead.
func (*TimeoutPassivationStrategy) Descriptor() ([]byte, []int) {
	return file_akkaserverless_protocol_discovery_proto_rawDescGZIP(), []int{6}
}

func (x *TimeoutPassivationStrategy) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

// Replicated Entity specific settings
type ReplicatedEntitySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// write consistency setting for replicating updates
	WriteConsistency ReplicatedWriteConsistency `protobuf:"varint,1,opt,name=write_consistency,json=writeConsistency,proto3,enum=akkaserverless.protocol.ReplicatedWriteConsistency" json:"write_consistency,omitempty"`
}

func (x *ReplicatedEntitySettings) Reset() {
	*x = ReplicatedEntitySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedEntitySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedEntitySettings) ProtoMessage() {}

func (x *ReplicatedEntitySettings) ProtoReflect() protoreflect.Message {
	mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedEntitySettings.ProtoReflect.Descriptor instead.
func (*ReplicatedEntitySettings) Descriptor() ([]byte, []int) {
	return file_akkaserverless_protocol_discovery_proto_rawDescGZIP(), []int{7}
}

func (x *ReplicatedEntitySettings) GetWriteConsistency() ReplicatedWriteConsistency {
	if x != nil {
		return x.WriteConsistency
	}
	return ReplicatedWriteConsistency_REPLICATED_WRITE_CONSISTENCY_LOCAL_UNSPECIFIED
}

// An error detected by the proxy to be reported to the user.
//
// The function should attempt to load the source code for any source code locations present in the file, and use
// the information in the source code location to extract the relevant lines of code, and highlight the column with
// a caret. For example, this is what an error may look like:
//
// ERROR: AS-00023 Event sourced entity method GetCart input parameter GetCartRequest does not declare a field with an
//   entity key.
// To fix this issue, annotate one of the fields in GetCartRequest with akkaserverless.field.entity_key, for example,
//   if the first field, id, is the entity key, you might add this:
//
// string id = 1 [(akkaserverless.field).entity_key = true];
//
// At shoppingcart.proto:15:
//     rpc GetCart(GetCartRequest) returns (Cart);
//                ^
// At shoppingcart.proto:63:
// message GetCartRequest {
//     string id = 1;
// }
type UserFunctionError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A single line message that describes the error.
	//
	// This message should always be displayed when the error is rendered.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The error code. Each class of error has a unique code.
	//
	// Typically this code should be displayed before the error message.
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// A longer message explaining the error.
	//
	// This message may be multiple lines long, may include suggestions of how to fix the error, code snippets, URLs to
	// go and read for more information, etc. If a user has configured logging to be less verbose, this detail may be
	// left off, or in a UI may be hidden in an expandable section.
	Detail string `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	// Zero or more source locations that are associated with this error. If the error is in a protobuf descriptor,
	// this should contain at least one location.
	SourceLocations []*UserFunctionError_SourceLocation `protobuf:"bytes,4,rep,name=source_locations,json=sourceLocations,proto3" json:"source_locations,omitempty"`
}

func (x *UserFunctionError) Reset() {
	*x = UserFunctionError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFunctionError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFunctionError) ProtoMessage() {}

func (x *UserFunctionError) ProtoReflect() protoreflect.Message {
	mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFunctionError.ProtoReflect.Descriptor instead.
func (*UserFunctionError) Descriptor() ([]byte, []int) {
	return file_akkaserverless_protocol_discovery_proto_rawDescGZIP(), []int{8}
}

func (x *UserFunctionError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserFunctionError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserFunctionError) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *UserFunctionError) GetSourceLocations() []*UserFunctionError_SourceLocation {
	if x != nil {
		return x.SourceLocations
	}
	return nil
}

type ProxyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolMajorVersion int32    `protobuf:"varint,1,opt,name=protocol_major_version,json=protocolMajorVersion,proto3" json:"protocol_major_version,omitempty"`
	ProtocolMinorVersion int32    `protobuf:"varint,2,opt,name=protocol_minor_version,json=protocolMinorVersion,proto3" json:"protocol_minor_version,omitempty"`
	ProxyName            string   `protobuf:"bytes,3,opt,name=proxy_name,json=proxyName,proto3" json:"proxy_name,omitempty"`
	ProxyVersion         string   `protobuf:"bytes,4,opt,name=proxy_version,json=proxyVersion,proto3" json:"proxy_version,omitempty"`
	SupportedEntityTypes []string `protobuf:"bytes,5,rep,name=supported_entity_types,json=supportedEntityTypes,proto3" json:"supported_entity_types,omitempty"`
	DevMode              bool     `protobuf:"varint,6,opt,name=dev_mode,json=devMode,proto3" json:"dev_mode,omitempty"`
}

func (x *ProxyInfo) Reset() {
	*x = ProxyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyInfo) ProtoMessage() {}

func (x *ProxyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyInfo.ProtoReflect.Descriptor instead.
func (*ProxyInfo) Descriptor() ([]byte, []int) {
	return file_akkaserverless_protocol_discovery_proto_rawDescGZIP(), []int{9}
}

func (x *ProxyInfo) GetProtocolMajorVersion() int32 {
	if x != nil {
		return x.ProtocolMajorVersion
	}
	return 0
}

func (x *ProxyInfo) GetProtocolMinorVersion() int32 {
	if x != nil {
		return x.ProtocolMinorVersion
	}
	return 0
}

func (x *ProxyInfo) GetProxyName() string {
	if x != nil {
		return x.ProxyName
	}
	return ""
}

func (x *ProxyInfo) GetProxyVersion() string {
	if x != nil {
		return x.ProxyVersion
	}
	return ""
}

func (x *ProxyInfo) GetSupportedEntityTypes() []string {
	if x != nil {
		return x.SupportedEntityTypes
	}
	return nil
}

func (x *ProxyInfo) GetDevMode() bool {
	if x != nil {
		return x.DevMode
	}
	return false
}

// A source code location.
//
// Source files will be protobuf files, since these are the only files that the proxy can know about.
type UserFunctionError_SourceLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the file. This name will match the name of a file passed in a FileDescriptor returned during
	// entity discovery.
	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	// The zero based line number of the the start of the location in the file.
	StartLine int32 `protobuf:"varint,2,opt,name=start_line,json=startLine,proto3" json:"start_line,omitempty"`
	// The zero based column number of the start of the location in the file.
	StartCol int32 `protobuf:"varint,3,opt,name=start_col,json=startCol,proto3" json:"start_col,omitempty"`
	// The zero based line number of the end of the location in the file.
	EndLine int32 `protobuf:"varint,4,opt,name=end_line,json=endLine,proto3" json:"end_line,omitempty"`
	// The zero based column number of the end of the location in the file.
	EndCol int32 `protobuf:"varint,5,opt,name=end_col,json=endCol,proto3" json:"end_col,omitempty"`
	// The path of the protobuf element at this location. This can be used to map this location to an
	// actual protobuf descriptor element, if needed. The format of this field is described in
	// https://github.com/protocolbuffers/protobuf/blob/4b770cabd7ff042283280bd76b6635650a04aa8a/src/google/protobuf/descriptor.proto#L802-L825
	ProtoPath []int32 `protobuf:"varint,6,rep,packed,name=proto_path,json=protoPath,proto3" json:"proto_path,omitempty"`
}

func (x *UserFunctionError_SourceLocation) Reset() {
	*x = UserFunctionError_SourceLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFunctionError_SourceLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFunctionError_SourceLocation) ProtoMessage() {}

func (x *UserFunctionError_SourceLocation) ProtoReflect() protoreflect.Message {
	mi := &file_akkaserverless_protocol_discovery_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFunctionError_SourceLocation.ProtoReflect.Descriptor instead.
func (*UserFunctionError_SourceLocation) Descriptor() ([]byte, []int) {
	return file_akkaserverless_protocol_discovery_proto_rawDescGZIP(), []int{8, 0}
}

func (x *UserFunctionError_SourceLocation) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UserFunctionError_SourceLocation) GetStartLine() int32 {
	if x != nil {
		return x.StartLine
	}
	return 0
}

func (x *UserFunctionError_SourceLocation) GetStartCol() int32 {
	if x != nil {
		return x.StartCol
	}
	return 0
}

func (x *UserFunctionError_SourceLocation) GetEndLine() int32 {
	if x != nil {
		return x.EndLine
	}
	return 0
}

func (x *UserFunctionError_SourceLocation) GetEndCol() int32 {
	if x != nil {
		return x.EndCol
	}
	return 0
}

func (x *UserFunctionError_SourceLocation) GetProtoPath() []int32 {
	if x != nil {
		return x.ProtoPath
	}
	return nil
}

var File_akkaserverless_protocol_discovery_proto protoreflect.FileDescriptor

var file_akkaserverless_protocol_discovery_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x61, 0x6b, 0x6b, 0x61, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x42, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x6b, 0x6b,
	0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd8, 0x02,
	0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6d,
	0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x69, 0x6e, 0x6f,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x02, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x41, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x43, 0x0a, 0x18,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x22, 0xb2, 0x02, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x61,
	0x73, 0x73, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x52, 0x13, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x60, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6b, 0x6b,
	0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x00, 0x52,
	0x10, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x13, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x72, 0x0a, 0x13, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x4f, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x48, 0x00, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42, 0x0a,
	0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x36, 0x0a, 0x1a, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x22, 0x7c, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x60,
	0x0a, 0x11, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6b, 0x6b, 0x61,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x10,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x22, 0xfe, 0x02, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x64, 0x0a, 0x10,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0xbc, 0x01, 0x0a, 0x0e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x6e,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x5f, 0x63, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x8c, 0x02, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6d, 0x61, 0x6a, 0x6f,
	0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d,
	0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x34, 0x0a, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x76, 0x4d, 0x6f, 0x64, 0x65,
	0x2a, 0xa1, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x32, 0x0a, 0x2e, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x57, 0x52,
	0x49, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x43, 0x59, 0x5f,
	0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45,
	0x44, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45,
	0x4e, 0x43, 0x59, 0x5f, 0x4d, 0x41, 0x4a, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x10, 0x01, 0x12, 0x24,
	0x0a, 0x20, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x57, 0x52, 0x49,
	0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x41,
	0x4c, 0x4c, 0x10, 0x02, 0x32, 0xaf, 0x02, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x12, 0x4d, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x22,
	0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x1d, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x51, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2a, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x6a, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6b,
	0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x62, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x6b, 0x6b, 0x61,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2d, 0x67, 0x6f, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_akkaserverless_protocol_discovery_proto_rawDescOnce sync.Once
	file_akkaserverless_protocol_discovery_proto_rawDescData = file_akkaserverless_protocol_discovery_proto_rawDesc
)

func file_akkaserverless_protocol_discovery_proto_rawDescGZIP() []byte {
	file_akkaserverless_protocol_discovery_proto_rawDescOnce.Do(func() {
		file_akkaserverless_protocol_discovery_proto_rawDescData = protoimpl.X.CompressGZIP(file_akkaserverless_protocol_discovery_proto_rawDescData)
	})
	return file_akkaserverless_protocol_discovery_proto_rawDescData
}

var file_akkaserverless_protocol_discovery_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_akkaserverless_protocol_discovery_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_akkaserverless_protocol_discovery_proto_goTypes = []interface{}{
	(ReplicatedWriteConsistency)(0),          // 0: akkaserverless.protocol.ReplicatedWriteConsistency
	(*Spec)(nil),                             // 1: akkaserverless.protocol.Spec
	(*ServiceInfo)(nil),                      // 2: akkaserverless.protocol.ServiceInfo
	(*Component)(nil),                        // 3: akkaserverless.protocol.Component
	(*GenericComponentSettings)(nil),         // 4: akkaserverless.protocol.GenericComponentSettings
	(*EntitySettings)(nil),                   // 5: akkaserverless.protocol.EntitySettings
	(*PassivationStrategy)(nil),              // 6: akkaserverless.protocol.PassivationStrategy
	(*TimeoutPassivationStrategy)(nil),       // 7: akkaserverless.protocol.TimeoutPassivationStrategy
	(*ReplicatedEntitySettings)(nil),         // 8: akkaserverless.protocol.ReplicatedEntitySettings
	(*UserFunctionError)(nil),                // 9: akkaserverless.protocol.UserFunctionError
	(*ProxyInfo)(nil),                        // 10: akkaserverless.protocol.ProxyInfo
	(*UserFunctionError_SourceLocation)(nil), // 11: akkaserverless.protocol.UserFunctionError.SourceLocation
	(*emptypb.Empty)(nil),                    // 12: google.protobuf.Empty
}
var file_akkaserverless_protocol_discovery_proto_depIdxs = []int32{
	3,  // 0: akkaserverless.protocol.Spec.components:type_name -> akkaserverless.protocol.Component
	2,  // 1: akkaserverless.protocol.Spec.service_info:type_name -> akkaserverless.protocol.ServiceInfo
	5,  // 2: akkaserverless.protocol.Component.entity:type_name -> akkaserverless.protocol.EntitySettings
	4,  // 3: akkaserverless.protocol.Component.component:type_name -> akkaserverless.protocol.GenericComponentSettings
	6,  // 4: akkaserverless.protocol.EntitySettings.passivation_strategy:type_name -> akkaserverless.protocol.PassivationStrategy
	8,  // 5: akkaserverless.protocol.EntitySettings.replicated_entity:type_name -> akkaserverless.protocol.ReplicatedEntitySettings
	7,  // 6: akkaserverless.protocol.PassivationStrategy.timeout:type_name -> akkaserverless.protocol.TimeoutPassivationStrategy
	0,  // 7: akkaserverless.protocol.ReplicatedEntitySettings.write_consistency:type_name -> akkaserverless.protocol.ReplicatedWriteConsistency
	11, // 8: akkaserverless.protocol.UserFunctionError.source_locations:type_name -> akkaserverless.protocol.UserFunctionError.SourceLocation
	10, // 9: akkaserverless.protocol.Discovery.Discover:input_type -> akkaserverless.protocol.ProxyInfo
	9,  // 10: akkaserverless.protocol.Discovery.ReportError:input_type -> akkaserverless.protocol.UserFunctionError
	12, // 11: akkaserverless.protocol.Discovery.ProxyTerminated:input_type -> google.protobuf.Empty
	12, // 12: akkaserverless.protocol.Discovery.HealthCheck:input_type -> google.protobuf.Empty
	1,  // 13: akkaserverless.protocol.Discovery.Discover:output_type -> akkaserverless.protocol.Spec
	12, // 14: akkaserverless.protocol.Discovery.ReportError:output_type -> google.protobuf.Empty
	12, // 15: akkaserverless.protocol.Discovery.ProxyTerminated:output_type -> google.protobuf.Empty
	12, // 16: akkaserverless.protocol.Discovery.HealthCheck:output_type -> google.protobuf.Empty
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_akkaserverless_protocol_discovery_proto_init() }
func file_akkaserverless_protocol_discovery_proto_init() {
	if File_akkaserverless_protocol_discovery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_akkaserverless_protocol_discovery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_akkaserverless_protocol_discovery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_akkaserverless_protocol_discovery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_akkaserverless_protocol_discovery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericComponentSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_akkaserverless_protocol_discovery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_akkaserverless_protocol_discovery_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassivationStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_akkaserverless_protocol_discovery_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeoutPassivationStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_akkaserverless_protocol_discovery_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedEntitySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_akkaserverless_protocol_discovery_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFunctionError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_akkaserverless_protocol_discovery_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_akkaserverless_protocol_discovery_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFunctionError_SourceLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_akkaserverless_protocol_discovery_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Component_Entity)(nil),
		(*Component_Component)(nil),
	}
	file_akkaserverless_protocol_discovery_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*EntitySettings_ReplicatedEntity)(nil),
	}
	file_akkaserverless_protocol_discovery_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*PassivationStrategy_Timeout)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_akkaserverless_protocol_discovery_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_akkaserverless_protocol_discovery_proto_goTypes,
		DependencyIndexes: file_akkaserverless_protocol_discovery_proto_depIdxs,
		EnumInfos:         file_akkaserverless_protocol_discovery_proto_enumTypes,
		MessageInfos:      file_akkaserverless_protocol_discovery_proto_msgTypes,
	}.Build()
	File_akkaserverless_protocol_discovery_proto = out.File
	file_akkaserverless_protocol_discovery_proto_rawDesc = nil
	file_akkaserverless_protocol_discovery_proto_goTypes = nil
	file_akkaserverless_protocol_discovery_proto_depIdxs = nil
}
