// Copyright 2021 Lightbend Inc.

// gRPC interface for Replicated Entity user functions.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: replicated_entity.proto

package entity

import (
	protocol "github.com/lightbend/akkaserverless-go-sdk/akkaserverless/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplicatedEntityClock int32

const (
	// Use the default clock for deciding the last write, which is the system
	// clock's milliseconds since epoch.
	ReplicatedEntityClock_REPLICATED_ENTITY_CLOCK_DEFAULT_UNSPECIFIED ReplicatedEntityClock = 0
	// Use the reverse semantics with the default clock, to enable first write
	// wins.
	ReplicatedEntityClock_REPLICATED_ENTITY_CLOCK_REVERSE ReplicatedEntityClock = 1
	// Use a custom clock value, set using custom_clock_value.
	ReplicatedEntityClock_REPLICATED_ENTITY_CLOCK_CUSTOM ReplicatedEntityClock = 2
	// Use a custom clock value, but automatically increment it by one if the
	// clock value from the current value is equal to the custom_clock_value.
	ReplicatedEntityClock_REPLICATED_ENTITY_CLOCK_CUSTOM_AUTO_INCREMENT ReplicatedEntityClock = 3
)

// Enum value maps for ReplicatedEntityClock.
var (
	ReplicatedEntityClock_name = map[int32]string{
		0: "REPLICATED_ENTITY_CLOCK_DEFAULT_UNSPECIFIED",
		1: "REPLICATED_ENTITY_CLOCK_REVERSE",
		2: "REPLICATED_ENTITY_CLOCK_CUSTOM",
		3: "REPLICATED_ENTITY_CLOCK_CUSTOM_AUTO_INCREMENT",
	}
	ReplicatedEntityClock_value = map[string]int32{
		"REPLICATED_ENTITY_CLOCK_DEFAULT_UNSPECIFIED":   0,
		"REPLICATED_ENTITY_CLOCK_REVERSE":               1,
		"REPLICATED_ENTITY_CLOCK_CUSTOM":                2,
		"REPLICATED_ENTITY_CLOCK_CUSTOM_AUTO_INCREMENT": 3,
	}
)

func (x ReplicatedEntityClock) Enum() *ReplicatedEntityClock {
	p := new(ReplicatedEntityClock)
	*p = x
	return p
}

func (x ReplicatedEntityClock) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplicatedEntityClock) Descriptor() protoreflect.EnumDescriptor {
	return file_replicated_entity_proto_enumTypes[0].Descriptor()
}

func (ReplicatedEntityClock) Type() protoreflect.EnumType {
	return &file_replicated_entity_proto_enumTypes[0]
}

func (x ReplicatedEntityClock) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplicatedEntityClock.Descriptor instead.
func (ReplicatedEntityClock) EnumDescriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{0}
}

// Message for the Replicated Entity handle stream in.
type ReplicatedEntityStreamIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*ReplicatedEntityStreamIn_Init
	//	*ReplicatedEntityStreamIn_Delta
	//	*ReplicatedEntityStreamIn_Delete
	//	*ReplicatedEntityStreamIn_Command
	Message isReplicatedEntityStreamIn_Message `protobuf_oneof:"message"`
}

func (x *ReplicatedEntityStreamIn) Reset() {
	*x = ReplicatedEntityStreamIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedEntityStreamIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedEntityStreamIn) ProtoMessage() {}

func (x *ReplicatedEntityStreamIn) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedEntityStreamIn.ProtoReflect.Descriptor instead.
func (*ReplicatedEntityStreamIn) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{0}
}

func (m *ReplicatedEntityStreamIn) GetMessage() isReplicatedEntityStreamIn_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ReplicatedEntityStreamIn) GetInit() *ReplicatedEntityInit {
	if x, ok := x.GetMessage().(*ReplicatedEntityStreamIn_Init); ok {
		return x.Init
	}
	return nil
}

func (x *ReplicatedEntityStreamIn) GetDelta() *ReplicatedEntityDelta {
	if x, ok := x.GetMessage().(*ReplicatedEntityStreamIn_Delta); ok {
		return x.Delta
	}
	return nil
}

func (x *ReplicatedEntityStreamIn) GetDelete() *ReplicatedEntityDelete {
	if x, ok := x.GetMessage().(*ReplicatedEntityStreamIn_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *ReplicatedEntityStreamIn) GetCommand() *protocol.Command {
	if x, ok := x.GetMessage().(*ReplicatedEntityStreamIn_Command); ok {
		return x.Command
	}
	return nil
}

type isReplicatedEntityStreamIn_Message interface {
	isReplicatedEntityStreamIn_Message()
}

type ReplicatedEntityStreamIn_Init struct {
	// Always sent first, and only once.
	Init *ReplicatedEntityInit `protobuf:"bytes,1,opt,name=init,proto3,oneof"`
}

type ReplicatedEntityStreamIn_Delta struct {
	// A delta to be applied to the current state. May be sent at any time.
	Delta *ReplicatedEntityDelta `protobuf:"bytes,2,opt,name=delta,proto3,oneof"`
}

type ReplicatedEntityStreamIn_Delete struct {
	// Delete the entity. May be sent at any time. The user function should
	// clear its state when it receives this. A proxy may decide to terminate
	// the stream after sending this.
	Delete *ReplicatedEntityDelete `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

type ReplicatedEntityStreamIn_Command struct {
	// A command, may be sent at any time.
	Command *protocol.Command `protobuf:"bytes,4,opt,name=command,proto3,oneof"`
}

func (*ReplicatedEntityStreamIn_Init) isReplicatedEntityStreamIn_Message() {}

func (*ReplicatedEntityStreamIn_Delta) isReplicatedEntityStreamIn_Message() {}

func (*ReplicatedEntityStreamIn_Delete) isReplicatedEntityStreamIn_Message() {}

func (*ReplicatedEntityStreamIn_Command) isReplicatedEntityStreamIn_Message() {}

// Message for the Replicated Entity handle stream out.
type ReplicatedEntityStreamOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*ReplicatedEntityStreamOut_Reply
	//	*ReplicatedEntityStreamOut_Failure
	Message isReplicatedEntityStreamOut_Message `protobuf_oneof:"message"`
}

func (x *ReplicatedEntityStreamOut) Reset() {
	*x = ReplicatedEntityStreamOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedEntityStreamOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedEntityStreamOut) ProtoMessage() {}

func (x *ReplicatedEntityStreamOut) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedEntityStreamOut.ProtoReflect.Descriptor instead.
func (*ReplicatedEntityStreamOut) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{1}
}

func (m *ReplicatedEntityStreamOut) GetMessage() isReplicatedEntityStreamOut_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ReplicatedEntityStreamOut) GetReply() *ReplicatedEntityReply {
	if x, ok := x.GetMessage().(*ReplicatedEntityStreamOut_Reply); ok {
		return x.Reply
	}
	return nil
}

func (x *ReplicatedEntityStreamOut) GetFailure() *protocol.Failure {
	if x, ok := x.GetMessage().(*ReplicatedEntityStreamOut_Failure); ok {
		return x.Failure
	}
	return nil
}

type isReplicatedEntityStreamOut_Message interface {
	isReplicatedEntityStreamOut_Message()
}

type ReplicatedEntityStreamOut_Reply struct {
	// A reply to an incoming command. Either one reply, or one failure, must be
	// sent in response to each command.
	Reply *ReplicatedEntityReply `protobuf:"bytes,1,opt,name=reply,proto3,oneof"`
}

type ReplicatedEntityStreamOut_Failure struct {
	// A failure. Either sent in response to a command, or sent if some other
	// error occurs.
	Failure *protocol.Failure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*ReplicatedEntityStreamOut_Reply) isReplicatedEntityStreamOut_Message() {}

func (*ReplicatedEntityStreamOut_Failure) isReplicatedEntityStreamOut_Message() {}

// A Replicated Entity delta
//
// Deltas only carry the change in value to be applied to the current (possibly
// empty) state.
type ReplicatedEntityDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Delta:
	//	*ReplicatedEntityDelta_Counter
	//	*ReplicatedEntityDelta_ReplicatedSet
	//	*ReplicatedEntityDelta_Register
	//	*ReplicatedEntityDelta_ReplicatedMap
	//	*ReplicatedEntityDelta_Vote
	Delta isReplicatedEntityDelta_Delta `protobuf_oneof:"delta"`
}

func (x *ReplicatedEntityDelta) Reset() {
	*x = ReplicatedEntityDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedEntityDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedEntityDelta) ProtoMessage() {}

func (x *ReplicatedEntityDelta) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedEntityDelta.ProtoReflect.Descriptor instead.
func (*ReplicatedEntityDelta) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{2}
}

func (m *ReplicatedEntityDelta) GetDelta() isReplicatedEntityDelta_Delta {
	if m != nil {
		return m.Delta
	}
	return nil
}

func (x *ReplicatedEntityDelta) GetCounter() *ReplicatedCounterDelta {
	if x, ok := x.GetDelta().(*ReplicatedEntityDelta_Counter); ok {
		return x.Counter
	}
	return nil
}

func (x *ReplicatedEntityDelta) GetReplicatedSet() *ReplicatedSetDelta {
	if x, ok := x.GetDelta().(*ReplicatedEntityDelta_ReplicatedSet); ok {
		return x.ReplicatedSet
	}
	return nil
}

func (x *ReplicatedEntityDelta) GetRegister() *ReplicatedRegisterDelta {
	if x, ok := x.GetDelta().(*ReplicatedEntityDelta_Register); ok {
		return x.Register
	}
	return nil
}

func (x *ReplicatedEntityDelta) GetReplicatedMap() *ReplicatedMapDelta {
	if x, ok := x.GetDelta().(*ReplicatedEntityDelta_ReplicatedMap); ok {
		return x.ReplicatedMap
	}
	return nil
}

func (x *ReplicatedEntityDelta) GetVote() *VoteDelta {
	if x, ok := x.GetDelta().(*ReplicatedEntityDelta_Vote); ok {
		return x.Vote
	}
	return nil
}

type isReplicatedEntityDelta_Delta interface {
	isReplicatedEntityDelta_Delta()
}

type ReplicatedEntityDelta_Counter struct {
	// GCounter was field 1
	Counter *ReplicatedCounterDelta `protobuf:"bytes,2,opt,name=counter,proto3,oneof"`
}

type ReplicatedEntityDelta_ReplicatedSet struct {
	// GSetDelta was field 3
	ReplicatedSet *ReplicatedSetDelta `protobuf:"bytes,4,opt,name=replicated_set,json=replicatedSet,proto3,oneof"`
}

type ReplicatedEntityDelta_Register struct {
	Register *ReplicatedRegisterDelta `protobuf:"bytes,5,opt,name=register,proto3,oneof"`
}

type ReplicatedEntityDelta_ReplicatedMap struct {
	// FlagDelta was field 6
	ReplicatedMap *ReplicatedMapDelta `protobuf:"bytes,7,opt,name=replicated_map,json=replicatedMap,proto3,oneof"`
}

type ReplicatedEntityDelta_Vote struct {
	Vote *VoteDelta `protobuf:"bytes,8,opt,name=vote,proto3,oneof"`
}

func (*ReplicatedEntityDelta_Counter) isReplicatedEntityDelta_Delta() {}

func (*ReplicatedEntityDelta_ReplicatedSet) isReplicatedEntityDelta_Delta() {}

func (*ReplicatedEntityDelta_Register) isReplicatedEntityDelta_Delta() {}

func (*ReplicatedEntityDelta_ReplicatedMap) isReplicatedEntityDelta_Delta() {}

func (*ReplicatedEntityDelta_Vote) isReplicatedEntityDelta_Delta() {}

type ReplicatedCounterDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Change int64 `protobuf:"zigzag64,1,opt,name=change,proto3" json:"change,omitempty"`
}

func (x *ReplicatedCounterDelta) Reset() {
	*x = ReplicatedCounterDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedCounterDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedCounterDelta) ProtoMessage() {}

func (x *ReplicatedCounterDelta) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedCounterDelta.ProtoReflect.Descriptor instead.
func (*ReplicatedCounterDelta) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{3}
}

func (x *ReplicatedCounterDelta) GetChange() int64 {
	if x != nil {
		return x.Change
	}
	return 0
}

type ReplicatedSetDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If cleared is set, the set must be cleared before added is processed.
	Cleared bool         `protobuf:"varint,1,opt,name=cleared,proto3" json:"cleared,omitempty"`
	Removed []*anypb.Any `protobuf:"bytes,2,rep,name=removed,proto3" json:"removed,omitempty"`
	Added   []*anypb.Any `protobuf:"bytes,3,rep,name=added,proto3" json:"added,omitempty"`
}

func (x *ReplicatedSetDelta) Reset() {
	*x = ReplicatedSetDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedSetDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedSetDelta) ProtoMessage() {}

func (x *ReplicatedSetDelta) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedSetDelta.ProtoReflect.Descriptor instead.
func (*ReplicatedSetDelta) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{4}
}

func (x *ReplicatedSetDelta) GetCleared() bool {
	if x != nil {
		return x.Cleared
	}
	return false
}

func (x *ReplicatedSetDelta) GetRemoved() []*anypb.Any {
	if x != nil {
		return x.Removed
	}
	return nil
}

func (x *ReplicatedSetDelta) GetAdded() []*anypb.Any {
	if x != nil {
		return x.Added
	}
	return nil
}

type ReplicatedRegisterDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value            *anypb.Any            `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Clock            ReplicatedEntityClock `protobuf:"varint,2,opt,name=clock,proto3,enum=akkaserverless.component.replicatedentity.ReplicatedEntityClock" json:"clock,omitempty"`
	CustomClockValue int64                 `protobuf:"varint,3,opt,name=custom_clock_value,json=customClockValue,proto3" json:"custom_clock_value,omitempty"`
}

func (x *ReplicatedRegisterDelta) Reset() {
	*x = ReplicatedRegisterDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedRegisterDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedRegisterDelta) ProtoMessage() {}

func (x *ReplicatedRegisterDelta) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedRegisterDelta.ProtoReflect.Descriptor instead.
func (*ReplicatedRegisterDelta) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{5}
}

func (x *ReplicatedRegisterDelta) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ReplicatedRegisterDelta) GetClock() ReplicatedEntityClock {
	if x != nil {
		return x.Clock
	}
	return ReplicatedEntityClock_REPLICATED_ENTITY_CLOCK_DEFAULT_UNSPECIFIED
}

func (x *ReplicatedRegisterDelta) GetCustomClockValue() int64 {
	if x != nil {
		return x.CustomClockValue
	}
	return 0
}

type ReplicatedMapDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cleared bool                       `protobuf:"varint,1,opt,name=cleared,proto3" json:"cleared,omitempty"`
	Removed []*anypb.Any               `protobuf:"bytes,2,rep,name=removed,proto3" json:"removed,omitempty"`
	Updated []*ReplicatedMapEntryDelta `protobuf:"bytes,3,rep,name=updated,proto3" json:"updated,omitempty"`
	Added   []*ReplicatedMapEntryDelta `protobuf:"bytes,4,rep,name=added,proto3" json:"added,omitempty"`
}

func (x *ReplicatedMapDelta) Reset() {
	*x = ReplicatedMapDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedMapDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedMapDelta) ProtoMessage() {}

func (x *ReplicatedMapDelta) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedMapDelta.ProtoReflect.Descriptor instead.
func (*ReplicatedMapDelta) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{6}
}

func (x *ReplicatedMapDelta) GetCleared() bool {
	if x != nil {
		return x.Cleared
	}
	return false
}

func (x *ReplicatedMapDelta) GetRemoved() []*anypb.Any {
	if x != nil {
		return x.Removed
	}
	return nil
}

func (x *ReplicatedMapDelta) GetUpdated() []*ReplicatedMapEntryDelta {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *ReplicatedMapDelta) GetAdded() []*ReplicatedMapEntryDelta {
	if x != nil {
		return x.Added
	}
	return nil
}

type ReplicatedMapEntryDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The entry key.
	Key   *anypb.Any             `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Delta *ReplicatedEntityDelta `protobuf:"bytes,2,opt,name=delta,proto3" json:"delta,omitempty"`
}

func (x *ReplicatedMapEntryDelta) Reset() {
	*x = ReplicatedMapEntryDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedMapEntryDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedMapEntryDelta) ProtoMessage() {}

func (x *ReplicatedMapEntryDelta) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedMapEntryDelta.ProtoReflect.Descriptor instead.
func (*ReplicatedMapEntryDelta) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{7}
}

func (x *ReplicatedMapEntryDelta) GetKey() *anypb.Any {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ReplicatedMapEntryDelta) GetDelta() *ReplicatedEntityDelta {
	if x != nil {
		return x.Delta
	}
	return nil
}

type VoteDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Set by the proxy initially or when the vote has changed.
	// Only set by the user function to change the node's current vote.
	SelfVote bool `protobuf:"varint,1,opt,name=self_vote,json=selfVote,proto3" json:"self_vote,omitempty"`
	// Only set by the proxy initially or when the vote has changed.
	// Ignored by the proxy when set by the user function.
	VotesFor int32 `protobuf:"varint,2,opt,name=votes_for,json=votesFor,proto3" json:"votes_for,omitempty"`
	// Only set by the proxy initially or when the vote has changed.
	// Ignored by the proxy when set by the user function.
	TotalVoters int32 `protobuf:"varint,3,opt,name=total_voters,json=totalVoters,proto3" json:"total_voters,omitempty"`
}

func (x *VoteDelta) Reset() {
	*x = VoteDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteDelta) ProtoMessage() {}

func (x *VoteDelta) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteDelta.ProtoReflect.Descriptor instead.
func (*VoteDelta) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{8}
}

func (x *VoteDelta) GetSelfVote() bool {
	if x != nil {
		return x.SelfVote
	}
	return false
}

func (x *VoteDelta) GetVotesFor() int32 {
	if x != nil {
		return x.VotesFor
	}
	return 0
}

func (x *VoteDelta) GetTotalVoters() int32 {
	if x != nil {
		return x.TotalVoters
	}
	return 0
}

type ReplicatedEntityInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	EntityId    string                 `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Delta       *ReplicatedEntityDelta `protobuf:"bytes,3,opt,name=delta,proto3" json:"delta,omitempty"`
}

func (x *ReplicatedEntityInit) Reset() {
	*x = ReplicatedEntityInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedEntityInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedEntityInit) ProtoMessage() {}

func (x *ReplicatedEntityInit) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedEntityInit.ProtoReflect.Descriptor instead.
func (*ReplicatedEntityInit) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{9}
}

func (x *ReplicatedEntityInit) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ReplicatedEntityInit) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *ReplicatedEntityInit) GetDelta() *ReplicatedEntityDelta {
	if x != nil {
		return x.Delta
	}
	return nil
}

type ReplicatedEntityDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplicatedEntityDelete) Reset() {
	*x = ReplicatedEntityDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedEntityDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedEntityDelete) ProtoMessage() {}

func (x *ReplicatedEntityDelete) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedEntityDelete.ProtoReflect.Descriptor instead.
func (*ReplicatedEntityDelete) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{10}
}

type ReplicatedEntityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandId    int64                        `protobuf:"varint,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	ClientAction *protocol.ClientAction       `protobuf:"bytes,2,opt,name=client_action,json=clientAction,proto3" json:"client_action,omitempty"`
	SideEffects  []*protocol.SideEffect       `protobuf:"bytes,4,rep,name=side_effects,json=sideEffects,proto3" json:"side_effects,omitempty"`
	StateAction  *ReplicatedEntityStateAction `protobuf:"bytes,5,opt,name=state_action,json=stateAction,proto3" json:"state_action,omitempty"`
}

func (x *ReplicatedEntityReply) Reset() {
	*x = ReplicatedEntityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedEntityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedEntityReply) ProtoMessage() {}

func (x *ReplicatedEntityReply) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedEntityReply.ProtoReflect.Descriptor instead.
func (*ReplicatedEntityReply) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{11}
}

func (x *ReplicatedEntityReply) GetCommandId() int64 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

func (x *ReplicatedEntityReply) GetClientAction() *protocol.ClientAction {
	if x != nil {
		return x.ClientAction
	}
	return nil
}

func (x *ReplicatedEntityReply) GetSideEffects() []*protocol.SideEffect {
	if x != nil {
		return x.SideEffects
	}
	return nil
}

func (x *ReplicatedEntityReply) GetStateAction() *ReplicatedEntityStateAction {
	if x != nil {
		return x.StateAction
	}
	return nil
}

type ReplicatedEntityStateAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*ReplicatedEntityStateAction_Update
	//	*ReplicatedEntityStateAction_Delete
	Action isReplicatedEntityStateAction_Action `protobuf_oneof:"action"`
}

func (x *ReplicatedEntityStateAction) Reset() {
	*x = ReplicatedEntityStateAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicated_entity_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicatedEntityStateAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedEntityStateAction) ProtoMessage() {}

func (x *ReplicatedEntityStateAction) ProtoReflect() protoreflect.Message {
	mi := &file_replicated_entity_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedEntityStateAction.ProtoReflect.Descriptor instead.
func (*ReplicatedEntityStateAction) Descriptor() ([]byte, []int) {
	return file_replicated_entity_proto_rawDescGZIP(), []int{12}
}

func (m *ReplicatedEntityStateAction) GetAction() isReplicatedEntityStateAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *ReplicatedEntityStateAction) GetUpdate() *ReplicatedEntityDelta {
	if x, ok := x.GetAction().(*ReplicatedEntityStateAction_Update); ok {
		return x.Update
	}
	return nil
}

func (x *ReplicatedEntityStateAction) GetDelete() *ReplicatedEntityDelete {
	if x, ok := x.GetAction().(*ReplicatedEntityStateAction_Delete); ok {
		return x.Delete
	}
	return nil
}

type isReplicatedEntityStateAction_Action interface {
	isReplicatedEntityStateAction_Action()
}

type ReplicatedEntityStateAction_Update struct {
	Update *ReplicatedEntityDelta `protobuf:"bytes,1,opt,name=update,proto3,oneof"`
}

type ReplicatedEntityStateAction_Delete struct {
	Delete *ReplicatedEntityDelete `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

func (*ReplicatedEntityStateAction_Update) isReplicatedEntityStateAction_Action() {}

func (*ReplicatedEntityStateAction_Delete) isReplicatedEntityStateAction_Action() {}

var File_replicated_entity_proto protoreflect.FileDescriptor

var file_replicated_entity_proto_rawDesc = []byte{
	0x0a, 0x17, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x29, 0x61, 0x6b, 0x6b, 0x61, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x1a, 0x28, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x6c, 0x65, 0x73, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c,
	0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x02, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x12, 0x55, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c,
	0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x69, 0x74, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x58, 0x0a, 0x05, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x61, 0x6b, 0x6b,
	0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x48, 0x00, 0x52, 0x05,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x5b, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x75,
	0x74, 0x12, 0x58, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x07, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xfd, 0x03, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12,
	0x5d, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x66,
	0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x12, 0x60, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x66, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70,
	0x12, 0x4a, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x61,
	0x64, 0x64, 0x65, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x56, 0x0a, 0x05,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x61, 0x6b,
	0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x63,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x4d, 0x61, 0x70, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x58, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x42, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x17,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x56, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x22, 0x68, 0x0a, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x76, 0x6f, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x56, 0x6f, 0x74,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x72,
	0x73, 0x22, 0xae, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x05, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x61, 0x6b, 0x6b, 0x61,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x05, 0x64, 0x65, 0x6c,
	0x74, 0x61, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0xb7, 0x02, 0x0a,
	0x15, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61,
	0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x0b,
	0x73, 0x69, 0x64, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x12, 0x69, 0x0a, 0x0c, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x46, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65,
	0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe0, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x5b, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c,
	0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0xc4, 0x01, 0x0a, 0x15, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x2f, 0x0a, 0x2b, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45,
	0x44, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x44,
	0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54,
	0x45, 0x44, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x4f, 0x43, 0x4b, 0x5f,
	0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x50,
	0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x43,
	0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x12, 0x31, 0x0a,
	0x2d, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x45, 0x4e, 0x54, 0x49,
	0x54, 0x59, 0x5f, 0x43, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f,
	0x41, 0x55, 0x54, 0x4f, 0x5f, 0x49, 0x4e, 0x43, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03,
	0x32, 0xae, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x97, 0x01, 0x0a, 0x06, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x43, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c,
	0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x1a, 0x44, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x75, 0x74, 0x28, 0x01, 0x30,
	0x01, 0x42, 0x66, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x62, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x6b, 0x6b, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x6c, 0x65, 0x73, 0x73, 0x2d, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x61, 0x6b, 0x6b,
	0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x2f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x3b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_replicated_entity_proto_rawDescOnce sync.Once
	file_replicated_entity_proto_rawDescData = file_replicated_entity_proto_rawDesc
)

func file_replicated_entity_proto_rawDescGZIP() []byte {
	file_replicated_entity_proto_rawDescOnce.Do(func() {
		file_replicated_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_replicated_entity_proto_rawDescData)
	})
	return file_replicated_entity_proto_rawDescData
}

var file_replicated_entity_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_replicated_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_replicated_entity_proto_goTypes = []interface{}{
	(ReplicatedEntityClock)(0),          // 0: akkaserverless.component.replicatedentity.ReplicatedEntityClock
	(*ReplicatedEntityStreamIn)(nil),    // 1: akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn
	(*ReplicatedEntityStreamOut)(nil),   // 2: akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut
	(*ReplicatedEntityDelta)(nil),       // 3: akkaserverless.component.replicatedentity.ReplicatedEntityDelta
	(*ReplicatedCounterDelta)(nil),      // 4: akkaserverless.component.replicatedentity.ReplicatedCounterDelta
	(*ReplicatedSetDelta)(nil),          // 5: akkaserverless.component.replicatedentity.ReplicatedSetDelta
	(*ReplicatedRegisterDelta)(nil),     // 6: akkaserverless.component.replicatedentity.ReplicatedRegisterDelta
	(*ReplicatedMapDelta)(nil),          // 7: akkaserverless.component.replicatedentity.ReplicatedMapDelta
	(*ReplicatedMapEntryDelta)(nil),     // 8: akkaserverless.component.replicatedentity.ReplicatedMapEntryDelta
	(*VoteDelta)(nil),                   // 9: akkaserverless.component.replicatedentity.VoteDelta
	(*ReplicatedEntityInit)(nil),        // 10: akkaserverless.component.replicatedentity.ReplicatedEntityInit
	(*ReplicatedEntityDelete)(nil),      // 11: akkaserverless.component.replicatedentity.ReplicatedEntityDelete
	(*ReplicatedEntityReply)(nil),       // 12: akkaserverless.component.replicatedentity.ReplicatedEntityReply
	(*ReplicatedEntityStateAction)(nil), // 13: akkaserverless.component.replicatedentity.ReplicatedEntityStateAction
	(*protocol.Command)(nil),            // 14: akkaserverless.component.entity.Command
	(*protocol.Failure)(nil),            // 15: akkaserverless.component.Failure
	(*anypb.Any)(nil),                   // 16: google.protobuf.Any
	(*protocol.ClientAction)(nil),       // 17: akkaserverless.component.ClientAction
	(*protocol.SideEffect)(nil),         // 18: akkaserverless.component.SideEffect
}
var file_replicated_entity_proto_depIdxs = []int32{
	10, // 0: akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.init:type_name -> akkaserverless.component.replicatedentity.ReplicatedEntityInit
	3,  // 1: akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.delta:type_name -> akkaserverless.component.replicatedentity.ReplicatedEntityDelta
	11, // 2: akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.delete:type_name -> akkaserverless.component.replicatedentity.ReplicatedEntityDelete
	14, // 3: akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn.command:type_name -> akkaserverless.component.entity.Command
	12, // 4: akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.reply:type_name -> akkaserverless.component.replicatedentity.ReplicatedEntityReply
	15, // 5: akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut.failure:type_name -> akkaserverless.component.Failure
	4,  // 6: akkaserverless.component.replicatedentity.ReplicatedEntityDelta.counter:type_name -> akkaserverless.component.replicatedentity.ReplicatedCounterDelta
	5,  // 7: akkaserverless.component.replicatedentity.ReplicatedEntityDelta.replicated_set:type_name -> akkaserverless.component.replicatedentity.ReplicatedSetDelta
	6,  // 8: akkaserverless.component.replicatedentity.ReplicatedEntityDelta.register:type_name -> akkaserverless.component.replicatedentity.ReplicatedRegisterDelta
	7,  // 9: akkaserverless.component.replicatedentity.ReplicatedEntityDelta.replicated_map:type_name -> akkaserverless.component.replicatedentity.ReplicatedMapDelta
	9,  // 10: akkaserverless.component.replicatedentity.ReplicatedEntityDelta.vote:type_name -> akkaserverless.component.replicatedentity.VoteDelta
	16, // 11: akkaserverless.component.replicatedentity.ReplicatedSetDelta.removed:type_name -> google.protobuf.Any
	16, // 12: akkaserverless.component.replicatedentity.ReplicatedSetDelta.added:type_name -> google.protobuf.Any
	16, // 13: akkaserverless.component.replicatedentity.ReplicatedRegisterDelta.value:type_name -> google.protobuf.Any
	0,  // 14: akkaserverless.component.replicatedentity.ReplicatedRegisterDelta.clock:type_name -> akkaserverless.component.replicatedentity.ReplicatedEntityClock
	16, // 15: akkaserverless.component.replicatedentity.ReplicatedMapDelta.removed:type_name -> google.protobuf.Any
	8,  // 16: akkaserverless.component.replicatedentity.ReplicatedMapDelta.updated:type_name -> akkaserverless.component.replicatedentity.ReplicatedMapEntryDelta
	8,  // 17: akkaserverless.component.replicatedentity.ReplicatedMapDelta.added:type_name -> akkaserverless.component.replicatedentity.ReplicatedMapEntryDelta
	16, // 18: akkaserverless.component.replicatedentity.ReplicatedMapEntryDelta.key:type_name -> google.protobuf.Any
	3,  // 19: akkaserverless.component.replicatedentity.ReplicatedMapEntryDelta.delta:type_name -> akkaserverless.component.replicatedentity.ReplicatedEntityDelta
	3,  // 20: akkaserverless.component.replicatedentity.ReplicatedEntityInit.delta:type_name -> akkaserverless.component.replicatedentity.ReplicatedEntityDelta
	17, // 21: akkaserverless.component.replicatedentity.ReplicatedEntityReply.client_action:type_name -> akkaserverless.component.ClientAction
	18, // 22: akkaserverless.component.replicatedentity.ReplicatedEntityReply.side_effects:type_name -> akkaserverless.component.SideEffect
	13, // 23: akkaserverless.component.replicatedentity.ReplicatedEntityReply.state_action:type_name -> akkaserverless.component.replicatedentity.ReplicatedEntityStateAction
	3,  // 24: akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.update:type_name -> akkaserverless.component.replicatedentity.ReplicatedEntityDelta
	11, // 25: akkaserverless.component.replicatedentity.ReplicatedEntityStateAction.delete:type_name -> akkaserverless.component.replicatedentity.ReplicatedEntityDelete
	1,  // 26: akkaserverless.component.replicatedentity.ReplicatedEntities.Handle:input_type -> akkaserverless.component.replicatedentity.ReplicatedEntityStreamIn
	2,  // 27: akkaserverless.component.replicatedentity.ReplicatedEntities.Handle:output_type -> akkaserverless.component.replicatedentity.ReplicatedEntityStreamOut
	27, // [27:28] is the sub-list for method output_type
	26, // [26:27] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_replicated_entity_proto_init() }
func file_replicated_entity_proto_init() {
	if File_replicated_entity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_replicated_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedEntityStreamIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicated_entity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedEntityStreamOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicated_entity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedEntityDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicated_entity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedCounterDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicated_entity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedSetDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicated_entity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedRegisterDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicated_entity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedMapDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicated_entity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedMapEntryDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicated_entity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicated_entity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedEntityInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicated_entity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedEntityDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicated_entity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedEntityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicated_entity_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicatedEntityStateAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_replicated_entity_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ReplicatedEntityStreamIn_Init)(nil),
		(*ReplicatedEntityStreamIn_Delta)(nil),
		(*ReplicatedEntityStreamIn_Delete)(nil),
		(*ReplicatedEntityStreamIn_Command)(nil),
	}
	file_replicated_entity_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ReplicatedEntityStreamOut_Reply)(nil),
		(*ReplicatedEntityStreamOut_Failure)(nil),
	}
	file_replicated_entity_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ReplicatedEntityDelta_Counter)(nil),
		(*ReplicatedEntityDelta_ReplicatedSet)(nil),
		(*ReplicatedEntityDelta_Register)(nil),
		(*ReplicatedEntityDelta_ReplicatedMap)(nil),
		(*ReplicatedEntityDelta_Vote)(nil),
	}
	file_replicated_entity_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*ReplicatedEntityStateAction_Update)(nil),
		(*ReplicatedEntityStateAction_Delete)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_replicated_entity_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_replicated_entity_proto_goTypes,
		DependencyIndexes: file_replicated_entity_proto_depIdxs,
		EnumInfos:         file_replicated_entity_proto_enumTypes,
		MessageInfos:      file_replicated_entity_proto_msgTypes,
	}.Build()
	File_replicated_entity_proto = out.File
	file_replicated_entity_proto_rawDesc = nil
	file_replicated_entity_proto_goTypes = nil
	file_replicated_entity_proto_depIdxs = nil
}
